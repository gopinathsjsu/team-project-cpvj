// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: location.sql

package db

import (
	"context"
	"database/sql"
)

const createLocation = `-- name: CreateLocation :one
INSERT INTO location (
    city,
    state,
    zipcode
) VALUES (
             $1, $2, $3
         ) RETURNING id, city, state, zipcode
`

type CreateLocationParams struct {
	City    sql.NullString `json:"city"`
	State   sql.NullString `json:"state"`
	Zipcode sql.NullString `json:"zipcode"`
}

func (q *Queries) CreateLocation(ctx context.Context, arg CreateLocationParams) (Location, error) {
	row := q.db.QueryRowContext(ctx, createLocation, arg.City, arg.State, arg.Zipcode)
	var i Location
	err := row.Scan(
		&i.ID,
		&i.City,
		&i.State,
		&i.Zipcode,
	)
	return i, err
}

const getLocation = `-- name: GetLocation :one
SELECT id, city, state, zipcode FROM location
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetLocation(ctx context.Context, id int64) (Location, error) {
	row := q.db.QueryRowContext(ctx, getLocation, id)
	var i Location
	err := row.Scan(
		&i.ID,
		&i.City,
		&i.State,
		&i.Zipcode,
	)
	return i, err
}
